[{"/Users/coreyskidmore/Desktop/ToolTrack/ToolTrack/src/index.js":"1","/Users/coreyskidmore/Desktop/ToolTrack/ToolTrack/src/App.js":"2","/Users/coreyskidmore/Desktop/ToolTrack/ToolTrack/src/reportWebVitals.js":"3","/Users/coreyskidmore/Desktop/ToolTrack/ToolTrack/src/Login.jsx":"4","/Users/coreyskidmore/Desktop/ToolTrack/ToolTrack/src/Register.jsx":"5"},{"size":535,"mtime":1676582378690,"results":"6","hashOfConfig":"7"},{"size":516,"mtime":1676645503449,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1676582378690,"results":"9","hashOfConfig":"7"},{"size":1076,"mtime":1676649705135,"results":"10","hashOfConfig":"7"},{"size":1189,"mtime":1676647168234,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hsv8by",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/coreyskidmore/Desktop/ToolTrack/ToolTrack/src/index.js",[],[],"/Users/coreyskidmore/Desktop/ToolTrack/ToolTrack/src/App.js",["29"],[],"import { React, useState } from \"react\"\nimport logo from './logo.svg';\nimport './App.css';\nimport { Login } from './Login';\nimport { Register } from './Register';\n\nfunction App() {\n  const [currentForm, setcurrentForm] = useState('login');\n\n  const toggleForm = (formName) => {\n    setcurrentForm(formName);\n  }\n\n\n  return (\n    <div className=\"App\">\n      {\n        currentForm === \"login\" ? <Login onFormSwitch={toggleForm}/> : <Register onFormSwitch={toggleForm} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","/Users/coreyskidmore/Desktop/ToolTrack/ToolTrack/src/reportWebVitals.js",[],[],"/Users/coreyskidmore/Desktop/ToolTrack/ToolTrack/src/Login.jsx",["30"],[],"/Users/coreyskidmore/Desktop/ToolTrack/ToolTrack/src/Register.jsx",["31"],[],"import { React, useState } from \"react\";\n\n\n\n\nexport const Register = (props) => {\n    const [email, setEmail] = useState('');\n    const [pass, setPass] = useState('');\n    const [name, setName] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(email)\n    }\n\n    return (\n        <div className=\"auth-form-container\">\n            <h2>Register</h2>\n        <form className=\"register-form\" onSubmit={handleSubmit}>\n            <label htmlFor=\"name\">Full Name</label>\n            <input value={name} name=\"name\" id=\"name\" placeholder=\"full name\" />\n            <label htmlFor=\"email\">Email</label>\n            <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" placeholder=\"youemail@gmail.com\" id=\"email\" name=\"email\" />\n            <label htmlFor=\"password\">Password</label>\n            <input value={pass} onChange={(e) => setPass(e.target.value)} type=\"password\" placeholder=\"*********\" id=\"password\" name=\"password\" />\n            <button type=\"submit\">LOG IN</button>\n        </form>\n        <button onClick={() => props.onFormSwitch('login')}>Already have an account? Login here. </button>\n        </div>\n    )\n}",{"ruleId":"32","severity":1,"message":"33","line":2,"column":8,"nodeType":"34","messageId":"35","endLine":2,"endColumn":12},{"ruleId":"32","severity":1,"message":"36","line":2,"column":10,"nodeType":"34","messageId":"35","endLine":2,"endColumn":21},{"ruleId":"32","severity":1,"message":"37","line":9,"column":18,"nodeType":"34","messageId":"35","endLine":9,"endColumn":25},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useMutation' is defined but never used.","'setName' is assigned a value but never used."]