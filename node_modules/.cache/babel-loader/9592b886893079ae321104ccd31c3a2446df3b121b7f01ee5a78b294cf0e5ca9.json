{"ast":null,"code":"var _jsxFileName = \"/Users/coreyskidmore/Desktop/newLog/newlog/src/Register.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = props => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [name, setName] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(email);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Full Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"full name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"youemail@gmail.com\",\n        id: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: pass,\n        onChange: e => setPass(e.target.value),\n        type: \"password\",\n        placeholder: \"*********\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"LOG IN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.onFormSwitch('login'),\n      children: \"Already have an account? Login here. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"Yo59ICqucLVvm5xXewC2Cs0XSII=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Register","props","email","setEmail","pass","setPass","name","setName","handleSubmit","e","preventDefault","console","log","target","value","onFormSwitch"],"sources":["/Users/coreyskidmore/Desktop/newLog/newlog/src/Register.jsx"],"sourcesContent":["import { React, useState } from \"react\";\n\n\n\n\nexport const Register = (props) => {\n    const [email, setEmail] = useState('');\n    const [pass, setPass] = useState('');\n    const [name, setName] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(email)\n    }\n\n    return (\n        <div className=\"auth-form-container\">\n        <form className=\"login-form\" onSubmit={handleSubmit}>\n            <label htmlFor=\"name\">Full Name</label>\n            <input value={name} name=\"name\" id=\"name\" placeholder=\"full name\" />\n            <label htmlFor=\"email\">Email</label>\n            <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" placeholder=\"youemail@gmail.com\" id=\"email\" name=\"email\" />\n            <label htmlFor=\"password\">Password</label>\n            <input value={pass} onChange={(e) => setPass(e.target.value)} type=\"password\" placeholder=\"*********\" id=\"password\" name=\"password\" />\n            <button type=\"submit\">LOG IN</button>\n        </form>\n        <button onClick={() => props.onFormSwitch('login')}>Already have an account? Login here. </button>\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAKxC,OAAO,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClBC,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EACtB,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,qBAAqB;IAAA,wBACpC;MAAM,SAAS,EAAC,YAAY;MAAC,QAAQ,EAAEM,YAAa;MAAA,wBAChD;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvC;QAAO,KAAK,EAAEF,IAAK;QAAC,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,MAAM;QAAC,WAAW,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eACpE;QAAO,OAAO,EAAC,OAAO;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eACpC;QAAO,KAAK,EAAEJ,KAAM;QAAC,QAAQ,EAAGO,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACI,MAAM,CAACC,KAAK,CAAE;QAAC,IAAI,EAAC,OAAO;QAAC,WAAW,EAAC,oBAAoB;QAAC,EAAE,EAAC,OAAO;QAAC,IAAI,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eACxI;QAAO,OAAO,EAAC,UAAU;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC1C;QAAO,KAAK,EAAEV,IAAK;QAAC,QAAQ,EAAGK,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACI,MAAM,CAACC,KAAK,CAAE;QAAC,IAAI,EAAC,UAAU;QAAC,WAAW,EAAC,WAAW;QAAC,EAAE,EAAC,UAAU;QAAC,IAAI,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eACtI;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC,eACP;MAAQ,OAAO,EAAE,MAAMb,KAAK,CAACc,YAAY,CAAC,OAAO,CAAE;MAAA,UAAC;IAAqC;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5F;AAEd,CAAC;AAAA,GAxBYf,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}